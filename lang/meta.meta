meta meta {
  grammar    = "meta" _ name _? '{' rule+ _? '}',
  
  rule       = _? name _ '=' _ expression ',',
  
  name       = '_' | letter (letter | digit)*,
  
  expression = choice,
  
  choice     = sequence (_ '|' sequence)*,
  
  sequence   = labeled+ action?,
  
  labeled    = _? (prefixed ':' name | prefixed),
  
  prefixed   = '&' suffixed
             | '~' suffixed
             | suffixed,
  
  suffixed   = primary '?'
             | primary '+'
             | primary '*'
             | primary,
            
  primary    = name
             | literal
             | litseq
             | group,
  
  group      = '(' expression _? ')',
  
  action     = '{' (~'}' char)* '}',
}

s = n v n
n = adj? ('cat' | 'hat' | 'bat')
adj = 'furry' | 'bald'
v = 'ate' | 'wore' | 'scratched'


(s 
  (n
    (adj furry) 
    cat
  )
  (v ate)
  (n bat)
)


cat ate hat
cat scratched mat


external rules:

letter
digit
literal
litseq
char
_