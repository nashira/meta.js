meta meta {
  grammar    = "meta" _ name:n _? '{' rule+:rs _? '}'             -> {name: n, rules: rs} <-,
  
  rule       = _? name:n _ '=' _ expression:e ','                 -> {name: n, expr: e} <-,
  
  name       = '_'
             | letter:f (letter | digit | '_')*:r                 -> [f].concat(r).join('') <-,
  
  expression = choice,
  
  choice     = sequence:f (_ '|' sequence:s ->s<-)*:r             -> r.length ? {name: 'choice', exprs: [f].concat(r)} : f <-,
  
  sequence   = labeled+:l action?:a                               -> l.length > 1 ? {name: 'sequence', exprs: l, action: a} : ((l[0].action = a) || true) && l[0] <-,
  
  labeled    = _? 
             (prefixed:p ':' name:n                               -> (p.label = n) && p <-
             | prefixed:p                                         -> p <-
             ):l                                                  -> l <-,
  
  prefixed   = '&' suffixed:s                                     -> {name: 'lookahead', expr: s} <-
             | '~' suffixed:s                                     -> {name: 'not', expr: s} <-
             | suffixed:s                                         -> s <-,
  
  suffixed   = primary:p '?'                                      -> {name: 'optional', expr: p} <-
             | primary:p '+'                                      -> {name: 'plus', expr: p} <-
             | primary:p '*'                                      -> {name: 'star', expr: p} <-
             | primary:p                                          -> p <-,
            
  primary    = name:n                                             -> {name: 'call', val: n} <-
             | literal:l                                          -> {name: 'literal', val: l} <-
             | litseq:l                                           -> {name: 'litseq', val: l} <-
             | group:g                                            -> g <-,
  
  group      = '(' _? expression:e _? ')'                         -> e <-,
  
  action     = _? "->" (~"<-" char:c ->c<-)*:a "<-"               -> a.join('') <-,
}
